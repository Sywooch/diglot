<?php

namespace app\controllers;

use Yii;
use yii\web\Controller;
use app\models\Article;
use app\models\User;
use yii\data\ActiveDataProvider;
use yii\web\NotFoundHttpException;


class AuthorPublicController extends Controller
{
    /**
     * @var User
     */
    public $author;

    public $layout = 'author-public';

    public function runAction($id, $params = [])
    {
        $username = $params['username'];
        $this->author = User::findOne(['username' => $username]);

        if (is_null($this->author))
            throw new NotFoundHttpException('Profile not found');

        $this->view->params['author'] = $this->author;

        return parent::runAction($id, $params); // TODO: Change the autogenerated stub
    }

    public function actionProfile()
    {
        $articleDataProvider = new ActiveDataProvider([
            'query' => Article::find()
                    ->where('status=:published and user_id=:author_id',
                        [
                            ':published' => Article::STATUS_PUBLISHED,
                            ':author_id' => $this->author->id
                        ])
                    ->limit(3),
            //sort
            'sort' => [
                'defaultOrder' => [
                    'date_published' => SORT_DESC,
                ]
            ],
        ]);


        return $this->render('profile', [
            'author' => $this->author,
            'articles' => $articleDataProvider,
        ]);
    }

    /**
     * Список опубликованных статей автора
     */
    public function actionArticles($username)
    {
        $articleDataProvider = new ActiveDataProvider([
            'query' => Article::find()
                    ->where('status=:published and user_id=:author_id',
                        [
                            ':published' => Article::STATUS_PUBLISHED,
                            ':author_id' => $this->author->id
                        ]),
            //sort
            'sort' => [
                'defaultOrder' => [
                    'date_published' => SORT_DESC,
                ]
            ],
        ]);
        return $this->render('articles', [
            'author' => $this->author,
            'articles' => $articleDataProvider,
        ]);
    }

    /**
     * Список комментариев пользователя
     */
    public function actionResponses()
    {
        return $this->render('responses', [
            'author' => $this->author,
            #'responses' => $dataProvider,
        ]);
    }

    /**
     * Список авторов, лайкнутых пользователем
     */
    public function actionFollowings()
    {
        return $this->render('followings', [
            'author' => $this->author,
            #'followings' => $dataProvider,
        ]);
    }

    /**
     * Список пользователей, лайкнувших автора
     */
    public function actionFollowers()
    {
        return $this->render('followers', [
            'author' => $this->author,
            #'followers' => $dataProvider,
        ]);
    }
}